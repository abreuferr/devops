#: Title :  Curso Git Alura
#: Author : "Caio Abreu Ferreira"
#: Description : Curso Alura de Git
#: Options : 

#############################################
#
# 02. iniciando os trabalhos
#
#############################################

# inicializar o repositório
$ git init

# mostrar o estado do repositório
$ git status

# adicionar um arquivo no repositório
$ git add indes.html
$ git add .

# adicionar uma mensagem a um commit
$ git commit -m "mensagem referente ao commit"

# visualizar o histórico dos commit
$ git log
$ git log -p ; visualizar as alterações
$ git log --pretty="format:%h %s"

# visualizar/modificar as configurações
$ git config --local user.name "caio ferreira"
$ git config --local user.email "abreuferr@gmail.com"
$ git config --local user.name
$ git config --local user.email

#############################################
#
# 03.compartilhando o trabalho
#
#############################################

# criar repositório git
$ git init --bare

# adicionar um repositório git
# git remote add <local> {caminho}
$ git remote add <local> <C:/Users/ALURA/Documents/git-e-github/servidor>

# visualizar o repositório git
$ git remote -v

# clonar um repositório
# git clone {caminho} <projeto>
$ git clone /c/Users/ALURA/Documents/git-e-github/servidor projeto

# enviar os dados para o repositório
# git push <local> <main>
$ git push <local> <master>

# renomear o repositório
$ git remote rename <origin> <local>

# receber os dados do repositório remote_port
# git pull <local> <main>
$ git pull <local> <master>

#############################################
#
# 04.Trabalhando em equipe
#
#############################################

# visualizar branch
# https://git-school.github.io/visualizing-git

# exibir branch
$ git branch

# criar uma branch
$ git branch <titulo>

# mudar para uma nova branch
$ git checkout <titulo>

# criar e mudar para a nova branch
$ git checkout -b <titulo>

# git add
# git commit

# voltando para a branch master
$ git checkout master

# unir as branch
# O merge junta os trabalhos e gera um merge commit
$ git checkout master
$ git merge <titulo>

# unir as branch
# O rebase aplica os commits de outra branch na branch atual
$ git checkout master
$ git rebase <titulo>

#
# SIMULAÇÃO
#

git branch ; para visualizar as branch existentes

git checkout -b titulo ; foi criado a branch "titulo" e nos movemos para ela
vi git/src/index.html ; modificação no arquivo index.html
git add git/src/index.html ; foi adicionado o arquivo index.html no monitoramento
git commit -m "alteração no titulo" ; foi feito um commit em relação a alteração feita anteriormente

git checkout main ; nos movemos para a branch main
git merge titulo ; trazer as alterações da branch titulo para a branch main

git checkout -b lista ; foi criado a branch "lista" e nos movemos para email
vi git/src/index.html ; modificação no arquivo index.html
git add git/src/index.html ; foi adicionado o arquivo index.html no monitoramento
git commit -m "alteração no titulo" ; foi feito um commit em relação a alteração feita anteriormente

git checkout main ; nos movemos para a branch main
git rebase titulo ; trazer as alterações da branch titulo para a branch main

#############################################
#
# 05.Manipulando as versões
#
#############################################

# reverter alterações feitas no código

$ vi git/src/index.html
$ git status
$ git checkout -- index.html

$ vi git/src/index.html
$ git status
$ git add git/src/index.html
$ git reset HEAD index.html
$ git checkout -- index.html

$ vi git/src/index.html
$ git add index.html
$ git commit -m "alterando o arquivo index.html"
$ git log
$ git revert <HASH_COMMIT>

# Quando precisamos pausar o desenvolvimento de alguma funcionalidade, 
# ou correção, antes de finalizar, talvez não seja interessante realizar 
# um commit, pois o nosso código pode não estar funcionando ainda. Nesse 
# caso é interessante salvar o trabalho para podermos voltar a ele depois.
#
$ vi git/src/index.html
$ git stash
$ git stash list
$ vi git/src/index.html
$ git status
$ git add git/src/index.html
$ git commit -m "alterando o arquivo index.html"
$ vi git/src/index.html
$ git stash pop
$ git add git/src/index.html
$ git commit "alterando o arquivo index.html"