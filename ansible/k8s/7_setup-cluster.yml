---
- hosts: master
  become: yes
  tasks:

    # Initialize Cluster. The log is also used to prevent an second initialization
    - name: inicializando o cluster
      shell: kubeadm init --ignore-preflight-errors --pod-network-cidr=192.168.10.0/24 >> cluster.txt
      args:
        chdir: $HOME
        creates: cluster.txt

    # Create the configuration / configuration directory
    - name: criando o diretorio .kube
      become: yes
      become_user: devops
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    # Copy admin.conf to the user's kube directory
    - name: copiando o arquivo de configuracao do k8s para o diretorio do usuario
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/devops/.kube/config
        remote_src: yes
        owner: devops

    # Setup Flannel. Use log to prevent second installation
    - name: instalacao do Pod Network
      become: yes
      become_user: devops
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> flannel_setup.log
      args:
        chdir: $HOME
        creates: pod_setup.txt

    # Create token to join cluster
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    # Set join command as fact
    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

# Join Cluster with each kube-node
- hosts: node
  become: yes
  tasks:

    - name: Wait for master's port 6443
      wait_for: "host={{ hostvars['kmaster']['ansible_default_ipv4']['address'] }} port=6443 timeout=1"

    - name: join cluster
      shell: "{{ hostvars['kmaster'].join_command }} --ignore-preflight-errors all  >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
